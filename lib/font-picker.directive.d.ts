import "rxjs/add/operator/debounceTime";
import "rxjs/add/operator/distinctUntilChanged";
import { OnInit, EventEmitter, ElementRef, ViewContainerRef, ChangeDetectorRef, DynamicComponentLoader } from '@angular/core';
import { FontPickerService } from './font-picker.service';
import { Font } from './classes';
export declare class FontPickerDirective implements OnInit {
    private el;
    private vc;
    private cd;
    private dcl;
    private service;
    private dialog;
    private created;
    fontPicker: Font;
    cpWidth: string;
    cpHeight: string;
    cpFallbackFont: Font;
    fontPickerChange: EventEmitter<Font>;
    cpPosition: string;
    cpPositionOffset: string;
    cpPositionRelativeToArrow: boolean;
    cpCancelButton: boolean;
    cpCancelButtonText: string;
    cpCancelButtonClass: string;
    cpUploadButton: boolean;
    cpUploadButtonText: string;
    cpUploadButtonClass: string;
    constructor(el: ElementRef, vc: ViewContainerRef, cd: ChangeDetectorRef, dcl: DynamicComponentLoader, service: FontPickerService);
    ngOnInit(): void;
    onClick(): void;
}
export declare class DialogComponent implements OnInit {
    private el;
    private service;
    private show;
    private font;
    private fonts;
    private allFonts;
    private initialFont;
    private styles;
    private top;
    private left;
    private position;
    private directiveInstance;
    private directiveElementRef;
    private listenerResize;
    private listenerMouseDown;
    private cpPosition;
    private cpPositionOffset;
    private cpCancelButton;
    private cpCancelButtonText;
    private cpCancelButtonClass;
    private cpUploadButton;
    private cpUploadButtonText;
    private cpUploadButtonClass;
    private cpWidth;
    private cpHeight;
    private arrowTop;
    private dialogArrowSize;
    private dialogArrowOffset;
    private searchTerm;
    constructor(el: ElementRef, service: FontPickerService);
    setDialog(instance: any, elementRef: ElementRef, font: Font, cpPosition: string, cpPositionOffset: string, cpPositionRelativeToArrow: boolean, cpUploadButton: boolean, cpUploadButtonClass: string, cpUploadButtonText: string, cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string, cpHeight: string, cpWidth: string): void;
    setInitialFont(font: Font): void;
    ngOnInit(): void;
    onResize(): void;
    onMouseDown(event: any): void;
    onSelectFont(font: any): void;
    isDescendant(parent: any, child: any): boolean;
    openFontPicker(): void;
    closeFontPicker(): void;
    uploadFontFiles(): void;
    cancelFontSelect(): void;
    loadGoogleFonts(fonts: Font[]): void;
    searchGoogleFonts(value: string): void;
    createDialogBox(element: any, offset: any): any;
    setDialogPosition(): void;
}
